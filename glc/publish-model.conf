subsystem = M1CS
component = GLC
publish {
  events = [
    {
      name = M1Health
      description = """Per the Observatory Requirements Document subsystems are required to generate an overall
health message once per second.  The M1CS Control Assembly generates an overall health event that should be
sufficient to support normal Science Operations."""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = m1csHealth
          description = "This is overall M1CS health."
          enum = [GOOD, ILL, BAD, INTERLOCKED, UNKNOWN]
        }
        {
          name = reason
          description = "Health message."
          type = string
        }
      ]
    }
    {
      name = M1RtcStatus
      description = """Status Information for the M1CS RTC loop."""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = rtcLoopState
          description = "State of the internal control loop."
          enum = [HALTED, STANDBY, TRACK]
        }
        {
          name = rtcOuterLoopInputs
          description = "Inputs to outer loop."
          enum = [NONE, ALL, PTT, FOCUS, ZERNIKE]
        }
        {
          name = sensorHeightRms
          description = "The RMS across the mirror of the corrected sensor heights."
          type = double
        }
        {
          name = actuatorPositionRms
          description = "The RMS across the mirror of actuator target position errors."
          type = double
        }
      ]
    }

    {
      name = M1SegmentTemperatures
      description = """
      Temperature measured by the thermistors mounted on the upper segment attached to the segment warping harness cables.
      Each segment has 3 temperature probes.
    """
      #requireRate=0.1666666
      maxRate = 0.1666666
      archive = true
      attributes = [
        {
          name = temperatures
          description = "Temperature reported by upper segment thermistors. With location [S, T], S is the segment starting at A1 at location 0. T is one of three segment temperatures."
          type = array
          dimensions = [492, 3]
          items = {
            type = float
          }
        }
      ]
    }
    {
      name = M1SegmentStatus
      description = """
      This command returns a description of the current mirror configuration. Informatino includes which segments are installed and active
      along with the segment electronic identifiers and names.
    """
      maxRate = 1
      archive = true
      attributes = [
        {
          name = status
          description = "The status of the M1 segments ordered by ascending mirror cell locatons [A-F][1-82]. Index 0 is A1."
          type = array
          items = {
            enum = [INSTALLED, ACTIVE, UNINSTALLED]
          }
        }
        {
          name = segmentId
          description = "Installed segment electronic IDs ordered by ascending mirror cell locatons [A-F][1-82]. Index 0 is A1."
          type = array
          dimensions = [492]
          items = {
            type = integer
          }
        }
        {
          name = segmentSerialNum
          description = "Serial number of the installed segments ordered by ascending mirror cell locatons [A-F][1-82]. The integer is the integer portion of SN-XXX."
          type = array
          dimensions = [492]
          items = {
            type = integer
          }
        }
      ]
    }

    {
      name = M1TrackingError
      description = "RMS tracking error by Zernike radial degree. Coefficient values are provided in microns."
      maxRate = 1
      archive = true
      attributes = [
        {
          name = trackingError
          description = "RMS tracking error by Zernike radial degree."
          type = array
          units = micron
          dimensions = [100]
          items = {
            type = float
          }
        }
      ]
    }

    {
      name = M1ActuatorPositions
      description = """
	  Actuator position measured in encoder units of microns.

	  This event is turned on with diagnostic mode hint "M1ActuatorPositions".
	  """
      maxRate = 1
      archive = true
      attributes = [
        {
          name = positions
          description = "Actuator position as measured by the actuator encoders. With location [S, P], S is the segment starting at A1 at index 0. P is one of three segment actuator positions."
          type = array
          dimensions = [492, 3]
          items = {
            type = float
          }
          units = micron
        }
      ]
    }
    {
      name = M1SensorHeights
      description = """
	  Sensor height measurements M1CS calculates by monitoring sensors attached to the side of each segment. *Note that not all segments have the same number of sensors!*

	  This event is turned on with diagnostic mode hint "M1SensorHeights".

	  See also command: GetSensorValues
	"""
      maxRate = 1
      archive = true
      attributes = [
        {
          name = heights
          description = "Calculated edge sensor heights after correcting for gap."
          type = array
          units = micron
          dimensions = [2772]
          items = {
            type = float
          }
        }
      ]
    }
    {
      name = M1SensorGaps
      description = """
	  Sensor Gap values M1CS determines when calculating sensor height while monitoring edge sensors. *Note that not all segments have the same number of sensors!*

	  This event is turned on with diagnostic mode hint "M1SensorGaps".

	  See also command: GetSensorValues
	  """
      maxRate = 1
      archive = true
      attributes = [
        {
          name = gaps
          description = "Calculated edge sensor gap from RTC."
          type = array
          units = micron
          dimensions = [2772]
          items = {
            type = float
          }
        }
      ]
    }

    {
      name = M1WarpingHarnessStrains
      description = """
	  Value of each warping harness strain gauge force.

	  This event is turned on with diagnostic mode hint "M1WarpingHarnessStrains".

	  See also command: GetWarpingHarnessStrains
	  """
      attributes = [
        {
          name = strain
          description = "Current value of each of the 21 strain gauges attached to the 492 segments"
          type = array
          dimensions = [492, 21]
          items = {
            type = float
          }
          units = newton
        }
        {
          name = highLimit
          description = "Upper limit for each of the 21 gauges attached to the 492 segments."
          type = array
          dimensions = [492, 21]
          items = {
            type = float
          }
          units = newton
        }
        {
          name = lowLimit
          description = "Lower limit for each of the 21 gauges attached to the 492 segments."
          type = array
          dimensions = [492, 21]
          items = {
            type = float
          }
          units = newton
        }
      ]
    }

    {
      name = M1PistonTipTilt
      description = """
        Current and target outer control loop piston, tip and tilt values.

        This event is turned on with diagnostic mode hint "M1PistonTipTilt".

	      See also command: GetPistonTipTilt
      """
      maxRate = 1
      archive = true
      attributes = [
        {
          name = current
          description = "Current M1 Tip(0), Tilt(1), Piston(2)"
          type = array
          units = micron
          dimensions = [3]
          items = {
            type = float
          }
        }
        {
          name = target
          description = "M1 Tip(0), Tilt(1), Piston(2) target from the TCS elevation angle."
          type = array
          units = micron
          dimensions = [3]
          items = {
            type = float
          }
        }
      ]
    }

    {
      name = M1OuterLoopControlCommand
      description = """
        Outer control loop control commands.

        This event is turned on with diagnostic mode hint "M1OuterLoopControlCommand".

	      See also command: GetOuterLoopControlCommand
      """
      maxRate = 1
      archive = true
      attributes = [
        {
          name = cmds
          description = "Calculated outer loop controller commands."
          type = array
          units = micron
          dimensions = [24]
          items = {
            type = float
          }
        }
      ]
    }
  ]
}
