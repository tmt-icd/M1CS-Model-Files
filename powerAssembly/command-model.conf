subsystem=M1CS
component=powerAssembly
description="""Commands accepted by the M1CS Power Assembly"""
receive=[
  {
    name = monitorPowerOn
    description = "Enable segment hardware power monitoring and events. Monitoring is enabled on startup."
    completionType = immediate
  },
  {
    name = monitorPowerOff
    description = "Disable segment hardware power monitoring and events."
    completionType = immediate
  },
  {
    name=setPower
    description="""
        Each segment power can be turned on or off.
        """
    completionType=longRunning
    requiredArgs=["sector","segment","state"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      },
      {
        name=segment
        type=integer
        minimum=1
        maximum=82
        description="The segment identifier is an integer from 1 to 82."
      },
      {
        name=state
        enum: ['ON', 'OFF']
        description="The state parameter is set to ON to turn on segment ower and OFF to turn off segment power."
      }
    ]
  },
  {
    name=setDefaultPower
    description="""
        Each segment power can be set by default to be on or off when node box power is applied. This command allows setting the default to be on or off for each segment.
        """
    completionType=longRunning
    requiredArgs=["sector","segment", "state"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      },
      {
        name=segment
        type=integer
        minimum=1
        maximum=82
        description="The segment identifier is an integer from 1 to 82."
      },
      {
        name=state
        enum: ['ON', 'OFF']
        description="The state parameter is set to ON to turn on segment ower and OFF to turn off segment power."
      }
    ]
  },
  {
    name = powerOnAll
    description = "Turn on power to all segments."
    completionType = longRunning
  },
  {
    name = powerOffAll
    description = "Turn off power to all segments."
    completionType = longRunning
  },
  {
    name=getOnePower
    description="""
        Return the current value and power status of one segment. The command returns a result with two values.
        The current is returned as a double, and the power state or RIO state is returned as a String with possible values of E, U, P, or N
        (E=error, U=unavailable, P=power, N=no power). If RIO fails, the value will be E or U."""
    completionType=longRunning
    requiredArgs=["sector","segment"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      }
      {
        name=segment
        type=integer
        minimum=1
        maximum=82
        description="The segment identifier is an integer from 1 to 82."
      }
    ]
    resultType=[
      {
        name=current
        type=double
        units=ampere
        description="The current value returned from the selected segment."
      },
      {
        name=state
        enum: ['E', 'U', 'P', 'N']
        description="The state of the RIO and segment power state (E=error, U=unavailable, P=power, N=no power). If RIO fails, the value will be E or U."
      }
    ]
  },
  {
    name=getNodeValues
    description="""
      Return the node current and state values and flow values for all segments managed by a node.
      The state of the RIO connection. E=error, U=unavailable, G=Good
      Current values are -1 if the state of a RIO is E or U."""
    completionType=immediate
    requiredArgs=["nodeId"]
    args=[
      {
        name=nodeId
        type=string
        description="""
            The nodeId is the format returned in the faultedNodes paramter of the status event in format SNX.
            S is a sector letter from A to F. N is a required letter. X is a node box number from 1 to 14.  Examples: AN1, EN12.
            """
      }
    ]
    resultType=[
      {
        name=state
        type=string
        description="State of the RIO that is being queried. Values can be E=error, U=unavailable, G=Good"
      }
      {
        name=s1
        type=double
        units=ampere
        description="The current value returned for segment 1."
      },
      {
        name=s2
        type=double
        units=ampere
        description="The current value returned for segment 2."
      },
      {
        name=s3
        type=double
        units=ampere
        description="The current value returned for segment 3."
      },
      {
        name=s4
        type=double
        units=ampere
        description="The current value returned for segment 4."
      },
      {
        name=s5
        type=double
        units=ampere
        description="The current value returned for segment 5."
      },
      {
        name=s6
        type=double
        units=ampere
        description="The current value returned for segment 6."
      }
    ]
  }
],
send=[
  // Send commands to HCDs
  // First powerHCD
  {
    name = getOnePower
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = setPower
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = powerOnAll
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = powerOffAll
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = setDefaultPower
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
]