subsystem=M1CS
component=purgeAssembly
description="""Commands accepted by the M1CS Purge Assembly"""
receive=[
  {
    name = monitorOn
    description = "Enable flow and pressure monitoring and events. Monitoring is enabled on startup."
    completionType = immediate
  }
  {
    name = monitorOff
    description = "Disable flow and pressure monitoring and events."
    completionType = immediate
  }
  {
    name=pressureSensorOn
    description="Turn power on for the pressure node box air pressure sensor."
    completionType=longRunning
    requiredArgs=["sector","node"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      },
      {
        name=node
        type=integer
        minimum=1
        maximum=14
        description="The node box identifier is an integer from 1 to 14."
      }
    ]
  }
  {
    name=pressureSensorOff
    description="Turn power off the pressure node box air pressure sensor."
    completionType=longRunning
    requiredArgs=["sector","node"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      },
      {
        name=node
        type=integer
        minimum=1
        maximum=14
        description="The node box identifier is an integer from 1 to 14."
      }
    ]
  },
  {
    name = pressureSensorOnAll
    description = "Turn on power to all node box pressure sensors."
    completionType = longRunning
  },
  {
    name = powerSensorOffAll
    description = "Turn off power to all node box pressure sensors."
    completionType = longRunning
  },
  {
    name=getOnePressure
    description="""
       Return the value of one RIO pressure sensor. The command returns a result with the pressure value and the state of the sensor power or node box.
       Pressure unit is Pounds Per Square Inch (psi). A value of -1 is returned if the pressure is unavailable.
    """
    completionType=immediate
    requiredArgs=["sector","node"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      }
      {
        name=node
        type=integer
        minimum=1
        maximum=14
        description="The node box identifier is an integer from 1 to 14."
      }
    ]
    resultType=[
      {
        name=pressure
        type=double
        units=psi
        description="The pressure value returned from the selected RIO. Pressure unit is Pounds Per Square Inch (psi)"
      },
      {
        name=state
        enum: ['E', 'U', 'P', 'N']
        description="The state of the RIO and pressure power state (E=error, U=unavailable, P=power, N=no power). If RIO fails, the value will be E or U."
      }
    ]
  },
  {
    name=getOneFlow
    description="""
       Return the air flow of one segment's air flow sensor. The command returns a result with one value. Unit is Liters Per Minute (lpm).
       A value of -1 is returned if the pressure is unavailable.
    """
    completionType=immediate
    requiredArgs=["sector","segment"]
    args=[
      {
        name=sector
        enum: ['A', 'B', 'C', 'D', 'E', 'F']
        description="The sector identifier S is a letter from A to F."
      }
      {
        name=segment
        type=integer
        minimum=1
        maximum=82
        description="The segment identifier is an integer from 1 to 82."
      }
    ]
    resultType=[
      {
        name=flow
        type=double
        units=lpm
        description="The flow value returned from the selected segment. Unit is Liters Per Minute (lpm)."
      }
    ]
  },
  {
    name=getNodeValues
    description="""
      Return the node pressure sensor value and flow values for all segments managed by a node box. Nodes 1 and 12 return 5 values.
      The state of the RIO connection. E=error, U=unavailable, G=Good
      Returned values are -1 if a sensor value is unavailable.
    """
    completionType=immediate
    requiredArgs=["nodeId"]
    args=[
      {
        name=nodeId
        type=string
        description="""
            The nodeId is the format returned in the faultedNodes paramter of the status event in format SNX.
            S is a sector letter from A to F. N is a required letter. X is a node box number from 1 to 14.  Examples: AN1, EN12.
            """
      }
    ]
    resultType=[
      {
        name=pressure
        type=double
        units=psi
        description="The pressure value returned from the node box pressure sensor. Unit is Pounds Per Square Inch (psi)."
      }
      {
        name=fs1
        type=double
        units=lpm
        description="The flow value returned from the segment 1. Unit is Liters Per Minute (lpm)."
      },
      {
        name=fs2
        type=double
        units=lpm
        description="The flow value returned from segment 2. Unit is Liters Per Minute (lpm)."
      },
      {
        name=fs3
        type=double
        units=lpm
        description="The flow value returned from the segment 3. Unit is Liters Per Minute (lpm)."
      },
      {
        name=fs4
        type=double
        units=lpm
        description="The flow value returned from the segment 4. Unit is Liters Per Minute (lpm)."
      },
      {
        name=fs5
        type=double
        units=lpm
        description="The flow value returned from the segment 5. Unit is Liters Per Minute (lpm)."
      },
      {
        name=fs6
        type=double
        units=lpm
        description="The flow value returned from the segment 6. Unit is Liters Per Minute (lpm)."
      }
    ]
  }
],
send=[
  // Send commands to HCDs
  // First segmentHCD
  {
    name = getOneFlow
    subsystem = M1CS
    component = segmentHCD
  },
  // Now purgeHCD
  {
    name = getOnePressure
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = pressureSensorOn
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = pressureSensorOff
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = pressureSensorOnAll
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
  {
    name = pressureSensorOffAll
    subsystem = M1CS
    component = nodeBoxRioHCD
  }
]